/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java-library'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'war'
    id "org.sonarqube" version "4.0.0.2929"
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.boot:spring-boot-dependencies:3.0.2'
    }
}

repositories {
    mavenLocal()
    gradlePluginPortal()
    maven { url 'https://repo.spring.io/release' }
    maven { url 'https://repo.maven.apache.org/maven2/' }
    maven { url "https://plugins.gradle.org/m2/" }
}

dependencies {
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
    implementation group: 'com.opencsv', name: 'opencsv', version: '5.9'

    compileOnly 'org.springframework.boot:spring-boot-starter-tomcat:3.0.2'
    compileOnly 'org.projectlombok:lombok:1.18.30'

    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    implementation('org.springframework.boot:spring-boot-starter-web:3.0.2')
    implementation 'org.springframework.boot:spring-boot-devtools:3.0.2'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.0.2'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.0.2'
    implementation 'org.springframework.security:spring-security-test:6.0.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.2'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.mariadb.jdbc:mariadb-java-client:1.5.7'
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    implementation 'org.quartz-scheduler:quartz:2.3.2'

    runtimeOnly 'mysql:mysql-connector-java:8.0.32'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.0.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.h2database:h2:2.1.214'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'budget-keeper-spring'
java.sourceCompatibility = JavaVersion.VERSION_17


tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(JavaExec).configureEach {
    jvmArgs '--add-opens', 'java.base/java.time=ALL-UNNAMED'
}

tasks.withType(Test).configureEach {
    jvmArgs '--add-opens', 'java.base/java.time=ALL-UNNAMED'
}

compileJava {
    options.compilerArgs << '-parameters'
    options.generatedSourceOutputDirectory.set(file('src/main/generated'))
    dependsOn(':gui:npmBuild')
}

clean {
    delete 'src/main/generated'
}

test {
    useJUnitPlatform()
}

tasks.register('copyWebApp', Copy) {
    from "$rootDir/gui/dist"
    into "src/main/resources/."
}

tasks.named('processResources') {
    dependsOn('copyWebApp')
}

war {
    archiveFileName = 'budget.war'
}
